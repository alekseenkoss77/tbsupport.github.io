{"version":3,"file":"public/js/app.js","sources":["app/scripts/components/checker.coffee","app/scripts/components/hls_player.coffee","app/scripts/components/progressbar.coffee","app/scripts/pi.coffee"],"names":[],"mappingsjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CClCA;AACA;AACA;AACA;AACA","sourcesContent":["var __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n(function(context) {\n  \"use strict\";\n  var $, method, pi, utils, _fn, _i, _len, _ref, _ref1, _ref2, _ref3;\n  $ = context.jQuery;\n  pi = context.pi = context.pi || {};\n  utils = pi.utils;\n  pi.Checker = (function(_super) {\n    __extends(Checker, _super);\n\n    function Checker() {\n      _ref = Checker.__super__.constructor.apply(this, arguments);\n      return _ref;\n    }\n\n    Checker.prototype.statuses = ['loading'];\n\n    Checker.prototype.initialize = function() {\n      this.type = this.options.type;\n      this.desc = this.nod.find('.desc');\n      return this.deps = this.options.deps || \"\";\n    };\n\n    Checker.prototype.loading = function(value) {\n      this.activate();\n      if (value) {\n        return this.nod.addClass('is-loading');\n      } else {\n        return this.nod.removeClass('is-loading');\n      }\n    };\n\n    Checker.prototype.finished = function(status) {\n      this.loading(false);\n      return this.nod.addClass(\"is-\" + status);\n    };\n\n    Checker.prototype.clear = function() {\n      var status, _i, _len, _ref1;\n      this.deactivate();\n      _ref1 = this.statuses;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        status = _ref1[_i];\n        this.nod.removeClass(\"is-\" + status);\n      }\n      this.desc.empty();\n    };\n\n    Checker.prototype.text = function(val) {\n      return this.desc.html(val);\n    };\n\n    return Checker;\n\n  })(pi.Base);\n  _ref1 = ['passed', 'failed', 'warning'];\n  _fn = function(method) {\n    pi.Checker.prototype.statuses.push(method);\n    return pi.Checker.prototype[method] = function() {\n      return this.finished(method);\n    };\n  };\n  for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n    method = _ref1[_i];\n    _fn(method);\n  }\n  pi.Socket = (function() {\n    Socket.prototype.messages = {\n      timeout: {\n        status: 0,\n        message: \"Вышло время ожидания подключения\"\n      },\n      error: {\n        status: 0,\n        message: \"Ошибка подключения через веб-сокеты.          Возможные причины:          <ul>          <li> - отсутствует интернет-соединение;</li>          <li> - запрещено подключение через порты 80, 443;</li>          <li> - прокси-сервер не поддерживает соединение через веб-сокеты;</li>          <li> - домены и IP адреса Teachbase не внесены в белый список файерволла/корпортивного прокси-сервера/другой блокирующей системы <br/>          (необходимо добавить домены *.teachbase.ru и/или IP адреса 54.77.210.105)</li>          </ul>\"\n      }\n    };\n\n    function Socket(path, options) {\n      this.path = path;\n      if (options == null) {\n        options = {};\n      }\n      this.ports = [80, 443];\n      this.retry_count = 0;\n      this._retry = options.retry || 1;\n      this._timeout = options.timeout || 30000;\n    }\n\n    Socket.prototype.check = function(resolve, reject) {\n      this.resolve = resolve;\n      this.reject = reject;\n      return this.init();\n    };\n\n    Socket.prototype.init = function(port) {\n      var path,\n        _this = this;\n      if (this.ports.length === 0) {\n        this.reject(this.messages.error);\n      }\n      this.port = port != null ? port : this.ports.pop();\n      path = \"ws\" + (this.port === 443 ? 's' : '') + \"://\" + this.path;\n      this.connected = false;\n      this.state = 'connecting';\n      this.socket = new WebSocket(path);\n      this._add_listeners();\n      return this._tid = after(this._timeout, function() {\n        return _this.handle_timeout();\n      });\n    };\n\n    Socket.prototype.handle_close = function() {\n      var _this = this;\n      return this._hc || (this._hc = function(e) {\n        _this.connected = false;\n        _this.state = 'close';\n        clearTimeout(_this.__retry_clear_id);\n        clearTimeout(_this._tid);\n        if (e.wasClean) {\n          _this.dispose();\n          return _this.init();\n        } else {\n          return _this._try_to_reconnect(e);\n        }\n      });\n    };\n\n    Socket.prototype.handle_timeout = function() {\n      this.dispose();\n      return this.init();\n    };\n\n    Socket.prototype.handle_open = function() {\n      var _this = this;\n      return this._ho || (this._ho = function() {\n        _this.state = 'open';\n        _this.connected = true;\n        clearTimeout(_this._tid);\n        _this.__retry_clear_id = utils.after(1000, function() {\n          return _this.retry_count = 0;\n        });\n        _this.resolve({\n          status: 1,\n          message: \"Соединение установлено (порт \" + _this.port + \")\",\n          version: _this.port\n        });\n        return _this.dispose();\n      });\n    };\n\n    Socket.prototype._try_to_reconnect = function(e) {\n      var _this = this;\n      if (this.retry_count >= this._retry) {\n        this.dispose();\n        return this.init();\n      } else {\n        this.retry_count += 1;\n        this._remove_listeners();\n        return utils.after(1000, function() {\n          return _this.init(_this.port);\n        });\n      }\n    };\n\n    Socket.prototype._add_listeners = function() {\n      this.socket.addEventListener('open', this.handle_open());\n      return this.socket.addEventListener('close', this.handle_close());\n    };\n\n    Socket.prototype._remove_listeners = function() {\n      this.socket.removeEventListener('open', this.handle_open());\n      return this.socket.removeEventListener('close', this.handle_close());\n    };\n\n    Socket.prototype.dispose = function() {\n      this._remove_listeners();\n      if (this.connected) {\n        this.socket.close();\n      }\n      this.connected = false;\n      return this.socket = null;\n    };\n\n    return Socket;\n\n  })();\n  pi.RtmpChecker = (function(_super) {\n    __extends(RtmpChecker, _super);\n\n    function RtmpChecker() {\n      _ref2 = RtmpChecker.__super__.constructor.apply(this, arguments);\n      return _ref2;\n    }\n\n    RtmpChecker.prototype.messages = {\n      \"rtmp.connection\": {\n        success: {\n          message: \"Подключение установлено.\",\n          status: 1\n        },\n        error: {\n          status: 0,\n          message: \"Ошибка подключения RTMP.          Возможные причины:          <ul>          <li> - отсутствует интернет-соединение;</li>          <li> - запрещено подключение по протоколу RTMP;</li>          <li> - запрещено подключение через порт 443;</li>          <li> - домены и IP адреса Teachbase не внесены в белый список файерволла/корпортивного прокси-сервера/другой блокирующей системы <br/>          (необходимо добавить домены *.teachbase.ru и/или IP адреса 46.182.24.106, 46.182.31.47, 79.125.119.170)</li>          </ul>\"\n        }\n      },\n      \"rtmp.disconnected\": {\n        error: {\n          message: \"Отсутствует подключение. Попробуйте еще раз.\",\n          status: 0\n        }\n      },\n      \"rtmp.undefined\": {\n        error: {\n          message: \"Отсутствует адрес RTMP сервера. Попробуйте еще раз.\",\n          status: 0\n        }\n      },\n      \"rtmp.ping\": {\n        success: function(data) {\n          var mes;\n          mes = \"Пинг (avg, min, max): \" + data.avg + \"s, \" + data.min + \"s, \" + data.max + \"s.\";\n          if (parseInt(data.avg) > 1000) {\n            return {\n              status: 2,\n              data: data,\n              message: \"\" + mes + \"<br/>Слишком большой пинг: \" + data.avg + \"s. Вероятна большая задержка при общении.\"\n            };\n          } else {\n            return {\n              status: 1,\n              data: data,\n              message: mes\n            };\n          }\n        },\n        error: {\n          message: \"Ошибка при проверке пинга. Попробуйте еще раз.\",\n          status: 0\n        }\n      },\n      \"rtmp.bw_in\": {\n        success: function(data) {\n          var input, mes;\n          mes = \"Входящая скорость (avg, min, max): \" + data.avg + \" KB/s, \" + data.min + \" KB/s, \" + data.max + \" KB/s.\";\n          input = parseInt(data.avg);\n          if (input < 512) {\n            return {\n              status: 2,\n              data: data,\n              message: \"\" + mes + \"<br/>Низкая входящая скорость. Возможны обрывы при просмотре видео других участников. <br/> Рекомендуется отключить прием видеосигнала в настройках.\"\n            };\n          } else {\n            return {\n              status: 1,\n              data: data,\n              message: mes\n            };\n          }\n        },\n        error: {\n          message: \"Ошибка при проверке входящей скорости. Попробуйте еще раз\",\n          status: 0\n        }\n      },\n      \"rtmp.bw_out\": {\n        success: function(data) {\n          var input, mes;\n          mes = \"Исходящая скорость (avg, min, max): \" + data.avg + \" KB/s, \" + data.min + \" KB/s, \" + data.max + \" KB/s.\";\n          input = parseInt(data.avg);\n          if (input < 512) {\n            return {\n              status: 2,\n              data: data,\n              message: \"\" + mes + \"<br/>Низкая исходящая скорость. Не рекомендуется включать трансляцию камеры.\"\n            };\n          } else if (input < 1024) {\n            return {\n              status: 2,\n              data: data,\n              message: \"\" + mes + \"<br/>Средняя исходящая скорость. Трансляция камеры возможна только в низком или среднем качестве.\"\n            };\n          } else {\n            return {\n              status: 1,\n              data: data,\n              message: mes\n            };\n          }\n        },\n        error: {\n          message: \"Ошибка при проверке исходящей скорости. Попробуйте еще раз\",\n          status: 0\n        }\n      }\n    };\n\n    RtmpChecker.prototype.initialize = function() {\n      var _this = this;\n      this.one('as3_event', function(e) {\n        if ((e.data.level === 'info') && (e.data.type === 'initialized')) {\n          _this._initialized = true;\n          return _this.trigger('swf_initialized');\n        }\n      });\n      return RtmpChecker.__super__.initialize.apply(this, arguments);\n    };\n\n    RtmpChecker.prototype.check = function(type) {\n      var _this = this;\n      return new Promise(function(resolve, reject) {\n        _this.one(\"as3_event\", function(e) {\n          if (e.data.level === \"error\") {\n            return reject(_this.prepare_error(e.data));\n          } else {\n            return resolve(_this.prepare_success(e.data));\n          }\n        });\n        return _this.as3_call(\"check_\" + type);\n      });\n    };\n\n    RtmpChecker.prototype.prepare_error = function(data) {\n      return this.messages[data.type].error;\n    };\n\n    RtmpChecker.prototype.prepare_success = function(data) {\n      if (typeof this.messages[data.type].success === 'function') {\n        return this.messages[data.type].success(data);\n      } else {\n        return this.messages[data.type].success;\n      }\n    };\n\n    return RtmpChecker;\n\n  })(pi.SwfPlayer);\n  return pi.CheckerController = (function(_super) {\n    __extends(CheckerController, _super);\n\n    function CheckerController() {\n      _ref3 = CheckerController.__super__.constructor.apply(this, arguments);\n      return _ref3;\n    }\n\n    CheckerController.prototype.initialize = function() {\n      var _this = this;\n      return pi.event.on('piecified', function() {\n        return _this._setup();\n      });\n    };\n\n    CheckerController.prototype._setup = function() {\n      var item;\n      this.rtmp = $(\"@rtmp\").pi();\n      this.progress = $(\"@progress\").pi();\n      this.checkers = (function() {\n        var _j, _len1, _ref4, _results;\n        _ref4 = this.nod.find('.item');\n        _results = [];\n        for (_j = 0, _len1 = _ref4.length; _j < _len1; _j++) {\n          item = _ref4[_j];\n          _results.push($(item).pi());\n        }\n        return _results;\n      }).call(this);\n      this.total = this.checkers.length;\n      this.passed = \"\";\n      return this.report = {};\n    };\n\n    CheckerController.prototype.resolver = function() {\n      var _this = this;\n      if (this._resolver) {\n        return this._resolver;\n      }\n      return this._resolver = function(data) {\n        if (data.status === 1) {\n          _this.checkers[_this.current].passed();\n        } else {\n          _this.checkers[_this.current].warning();\n        }\n        _this.checkers[_this.current].text(data.message);\n        _this.passed += \"\" + _this.checkers[_this.current].type + \";\";\n        _this.report[_this.checkers[_this.current].type] = data;\n        utils.debug(data);\n        return _this.next();\n      };\n    };\n\n    CheckerController.prototype.error_handler = function() {\n      var _this = this;\n      if (this._error_handler) {\n        return this._error_handler;\n      }\n      return this._error_handler = function(data) {\n        _this.checkers[_this.current].failed();\n        _this.checkers[_this.current].text(data.message);\n        _this.report[_this.checkers[_this.current].type] = data;\n        utils.debug(data);\n        return _this.next();\n      };\n    };\n\n    CheckerController.prototype.start = function() {\n      var ch, _j, _len1, _ref4;\n      if (this.current >= 0) {\n        _ref4 = this.checkers;\n        for (_j = 0, _len1 = _ref4.length; _j < _len1; _j++) {\n          ch = _ref4[_j];\n          ch.clear();\n        }\n        this.passed = \"\";\n        this.progress.reset();\n        this.report = {};\n      }\n      this.current = -1;\n      this.trigger('start');\n      return this.next();\n    };\n\n    CheckerController.prototype.finish = function() {\n      this.progress.set(100);\n      return this.trigger('finish');\n    };\n\n    CheckerController.prototype.next = function() {\n      this.current++;\n      if (!(this.total > this.current)) {\n        return this.finish();\n      }\n      this.progress.set((((this.current + .5 * Math.random()) / this.total) * 100) | 0);\n      if (!this.passed.match(this.checkers[this.current].deps)) {\n        this.checkers[this.current].failed();\n        this.checkers[this.current].text(\"Пропущена\");\n        return this.next();\n      }\n      this.checkers[this.current].loading(true);\n      return this[\"check_\" + this.checkers[this.current].type](this.checkers[this.current].options).then(this.resolver())[\"catch\"](this.error_handler());\n    };\n\n    CheckerController.prototype.check_browser_version = function() {\n      var _this = this;\n      return new Promise(function(resolve, reject) {\n        var installed;\n        installed = \"\" + bowser.name + \" \" + bowser.version;\n        if (bowser.msie) {\n          if (bowser.version < 9) {\n            return reject({\n              status: 0,\n              message: \"Данный браузер не поддерживается\",\n              version: installed\n            });\n          }\n          if (bowser.version < 10) {\n            return reject({\n              status: 2,\n              message: \"Данный браузер не поддерживает подробный сбор статистики\",\n              version: installed\n            });\n          }\n        } else if ((bowser.firefox && bowser.version < 10) || (bowser.chrome && bowser.version < 24) || (bowser.opera && bowser.version < 12) || (bowser.safari && bowser.version < 6)) {\n          return reject({\n            status: 0,\n            message: \"Данный браузер не поддерживается\",\n            version: installed\n          });\n        }\n        return resolve({\n          status: 1,\n          message: \"Установленная версия: \" + installed\n        });\n      });\n    };\n\n    CheckerController.prototype.check_ws = function() {\n      var _this = this;\n      return new Promise(function(resolve, reject) {\n        var socket;\n        socket = new pi.Socket(_this.options.ws);\n        return socket.check(resolve, reject);\n      });\n    };\n\n    CheckerController.prototype.check_fp_version = function() {\n      var _this = this;\n      return new Promise(function(resolve, reject) {\n        var installed, maj, min, rel, _ref4;\n        _ref4 = swfobject.getFlashPlayerVersion(), maj = _ref4.major, min = _ref4.minor, rel = _ref4.release;\n        installed = \"\" + maj + \".\" + min + \".\" + rel;\n        if (swfobject.hasFlashPlayerVersion(_this.options.fp_version)) {\n          resolve({\n            status: 1,\n            message: \"Установленная версия: \" + installed,\n            version: installed\n          });\n        } else {\n          reject({\n            status: 0,\n            message: \"Установленная версия: \" + installed + \". Необходимо установить версию \" + _this.options.fp_version + \" <a href='http://get.adobe.com/ru/flashplayer/' target='_blank'>установить</a>\",\n            version: installed\n          });\n        }\n      });\n    };\n\n    CheckerController.prototype.check_java_version = function() {\n      var _this = this;\n      return new Promise(function(resolve, reject) {\n        var installed, mes;\n        installed = deployJava.getJREs();\n        mes = \"Установлена версия: \" + (installed.join('; '));\n        if (deployJava.versionCheck(\"\" + _this.options.java_version + \"+\")) {\n          return resolve({\n            status: 1,\n            message: mes,\n            version: installed\n          });\n        } else {\n          if (installed.length) {\n            mes += \"<br/>\";\n          } else {\n            mes = \"\";\n          }\n          mes += \"Для демонстрации рабочего стола необходимо установить Java RE версии \" + _this.options.java_version + \"+ <a href='http://java.com/en/download/testjava.jsp' target='_blank'>установить</a>\";\n          return resolve({\n            status: 2,\n            message: mes,\n            version: installed\n          });\n        }\n      });\n    };\n\n    CheckerController.prototype.check_rtmp_connection = function() {\n      var _this = this;\n      if (this.rtmp._initialized) {\n        return this.rtmp.check(\"connection\");\n      } else {\n        return new Promise(function(resolve, reject) {\n          var tid;\n          tid = after(20000, function() {\n            return reject({\n              status: 0,\n              message: \"Приложение для проверки подключения не найдено\"\n            });\n          });\n          return _this.rtmp.on('swf_initialized', function() {\n            clearTimeout(tid);\n            return resolve();\n          });\n        }).then(function() {\n          return _this.rtmp.check(\"connection\");\n        });\n      }\n    };\n\n    CheckerController.prototype.check_rtmp_ping = function() {\n      return this.rtmp.check(\"latency\");\n    };\n\n    CheckerController.prototype.check_rtmp_input = function() {\n      return this.rtmp.check(\"inbw\");\n    };\n\n    CheckerController.prototype.check_rtmp_output = function() {\n      return this.rtmp.check(\"outbw\");\n    };\n\n    return CheckerController;\n\n  })(pi.Base);\n})(this);\n","var __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n(function(context) {\n  \"use strict\";\n  var $, pi, utils, _ref, _video_count;\n  $ = context.jQuery;\n  pi = context.pi = context.pi || {};\n  utils = pi.utils;\n  _video_count = 0;\n  videojs.options.flash.swf = \"/flash/video-js.swf\";\n  return pi.HlsPlayer = (function(_super) {\n    __extends(HlsPlayer, _super);\n\n    function HlsPlayer() {\n      _ref = HlsPlayer.__super__.constructor.apply(this, arguments);\n      return _ref;\n    }\n\n    HlsPlayer.prototype.initialize = function() {\n      return HlsPlayer.__super__.initialize.apply(this, arguments);\n    };\n\n    HlsPlayer.prototype.load = function(url, poster) {\n      var sources, _techOrder;\n      this.clear();\n      this.video = document.createElement('video');\n      this.video.className = 'video-js vjs-default-skin vjs-big-play-centered';\n      this.nod.append(this.video);\n      sources = [];\n      _techOrder = [];\n      if (videojs.Html5.canPlaySource({\n        type: \"application/vnd.apple.mpegURL\"\n      })) {\n        sources.push({\n          src: url,\n          type: \"application/vnd.apple.mpegURL\"\n        });\n        _techOrder.push('html5');\n      } else {\n        sources.push({\n          src: url,\n          type: \"video/mp4\"\n        });\n        _techOrder = ['flash'];\n      }\n      if (!sources.length) {\n        throw Error('VideoPlayerError: Source is undefined');\n      }\n      this.player = videojs(this.video, {\n        preload: 'none',\n        controls: true,\n        width: '100%',\n        height: '100%',\n        techOrder: _techOrder\n      });\n      if (poster) {\n        this.player.poster(poster);\n      }\n      this.player.on('play', utils.curry(this.trigger, ['state', 'playing'], this));\n      this.player.on('pause', utils.curry(this.trigger, ['state', 'paused'], this));\n      this.player.on('ended', utils.curry(this.trigger, ['state', 'ended'], this));\n      return this.player.src(sources);\n    };\n\n    HlsPlayer.prototype.clear = function() {\n      this.trigger('state', 'clear');\n      this.off();\n      if (this.player == null) {\n        return;\n      }\n      this.player.trigger('dispose');\n      this.player.trigger = function() {};\n      return this.player.dispose();\n    };\n\n    return HlsPlayer;\n\n  })(pi.Base);\n})(this);\n","var __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n(function(context) {\n  \"use strict\";\n  var $, pi, utils, _ref;\n  $ = context.jQuery;\n  pi = context.pi = context.pi || {};\n  utils = pi.utils;\n  return pi.Progressbar = (function(_super) {\n    __extends(Progressbar, _super);\n\n    function Progressbar() {\n      _ref = Progressbar.__super__.constructor.apply(this, arguments);\n      return _ref;\n    }\n\n    Progressbar.prototype.set = function(value) {\n      this.value = value;\n      return this.nod.css({\n        width: \"\" + value + \"%\"\n      });\n    };\n\n    Progressbar.prototype.reset = function() {\n      return this.nod.css({\n        width: 0\n      });\n    };\n\n    return Progressbar;\n\n  })(pi.Base);\n})(this);\n","$(function() {\n  pi.log_level = 'debug';\n  return pi.piecify();\n});\n"]}